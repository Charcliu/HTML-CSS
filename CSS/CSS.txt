#盒子模型：内容（content），内边距（padding），边框（border），外边距（margin）

#CSS选择器
1.id选择器（#id）;
2.类选择器（.class);
3.标签选择器（div）;
4.相邻选择器（h1+p）；
5.子选择器（ul>li）；
6.后代选择器（li a）；
7.通配符（*）；
8.属性选择器（a[rel = 'xyz'];
9.伪类选择器（a:hover,li:nth-child);

#选择器优先级
@important > 行内样式 > id > class > 标签 > 通配符 > 继承

#display
1.block:设定元素变为块级元素，占据一整行，可设置宽高；
2.inline-block：设定元素为行内块元素，可设置宽高，一行能显示多个；
3.inline：行内元素，不可设置宽高，一行可显示多个；
4.none：设置元素不可见；
5.flex：开启弹性布局；
6.table：作为块级表格显示；
7.list-item：像块级元素一样显示，并添加样式列表标记；
8.inherit：继承父元素的display属性；

#position
relative：相对定位，相对于正常位置进行定位
absolute：绝对定位，相对于父元素中最近一个position不为 static（静态，无定位）定位；
fixed：相对于浏览器窗口定位；
static：默认，无定位；
inherit：继承父元素的定位；

#在CSS中，visibility有个collapse属性，是干嘛的？
collapse是崩塌，失效的意思。
对于普通的元素visibility:collapse和display:none 表现相同，使元素隐藏并且不占据空间。
但是对于table来说，table会被隐藏，但是依然占据空间（ie不支持）

#CSS清除浮动
1.父级div定义 height
2.结尾处加空div标签 clear:both
3.父级div定义 伪类:after 和 zoom
4.父级div定义 overflow:hidden

#什么是响应式设计？响应式设计的基本原理是什么？
响应式设计（Responsive Web design）：集中创建页面的图片排版大小，可以智能的根据用户使用的设备环境（系统平台、屏幕尺寸、屏幕定向等）进行对应的布局。
基本原理：使用@media媒体查询，然后使用不同的CSS规则来实现屏幕的最佳布局。

#css居中
1. 让元素水平居中，使用 text-align: center;
2. 块级元素水平居中，使用 margin:0 auto;
3. 单行文本的垂直居中，让 line-height 和 height 相等。
4. 确定高度的块级元素竖直居中，使用 position: absolute; top: 50%; margin-top: ...;(margin-top的值为自身高度的值的一半的负值);
5. 绝对定位实现水平垂直居中，使用 position: absolute; top: 0; right: 0; bottom: 0; left: 0; margin: auto;
6. 使用 display: table-cell; /*vertical-align: middle; 实现垂直居中*/
7. /*flex 布局*/ display: flex; /*实现垂直居中*/ align-items: center; /*实现水平居中*/ justify-content: center;
8./*relative 定位*/ position: relative; /*top和left偏移各为50%*/ top: 50%; left: 50%;/*translate(-50%,-50%) 偏移自身的宽和高的-50%*/transform: translate(-50%, -50%);
